"""Rename password column to password_hash

Revision ID: e7781b9d7da0
Revises: 8cd806d61447
Create Date: 2024-11-24 23:39:51.925793

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e7781b9d7da0'
down_revision = '8cd806d61447'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('place_amenity')
    with op.batch_alter_table('amenities', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_index('name')

    with op.batch_alter_table('places', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('title',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('price',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('owner_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.drop_constraint('places_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('text',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('rating',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('place_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.drop_index('user_id')
        batch_op.drop_constraint('reviews_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('reviews_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'places', ['place_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=256), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.drop_column('password')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', mysql.VARCHAR(length=255), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reviews_ibfk_2', 'places', ['place_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('reviews_ibfk_1', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('user_id', ['user_id', 'place_id'], unique=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('place_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)
        batch_op.alter_column('rating',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('text',
               existing_type=sa.String(length=128),
               type_=mysql.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)

    with op.batch_alter_table('places', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('places_ibfk_1', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('owner_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)

    with op.batch_alter_table('amenities', schema=None) as batch_op:
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)

    op.create_table('place_amenity',
    sa.Column('place_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('amenity_id', mysql.CHAR(length=36), nullable=False),
    sa.ForeignKeyConstraint(['amenity_id'], ['amenities.id'], name='place_amenity_ibfk_2', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], name='place_amenity_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('place_id', 'amenity_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
